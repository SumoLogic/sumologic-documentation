name: Build and Deploy

on:
  workflow_call:
    inputs:
      hostname:
        description: Host name of the deployed environment
        required: true
        type: string
      base_url:
        description: Base url for the deployed environment. Should start and end with a slash.
        required: false
        default: "/"
        type: string
      environment:
        description: GHA environment name
        required: true
        type: string
    secrets:
      S3_BUCKET_NAME:
        required: true
      CLOUDFRONT_DISTRIBUTION_ID:
        required: true
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true

jobs:
  build-and-deploy:
    runs-on: ubuntu-20.04
    environment:
      name: ${{ inputs.environment }}
      url: ${{ inputs.hostname }}${{ inputs.base_url }}
    env:
      CI: true
      NODE_ENV: production
      AWS_PAGER: ""
      HOSTNAME: ${{ inputs.hostname }}
      BASE_URL: ${{ inputs.base_url }}
      AWS_DEFAULT_REGION: us-east-1
      AWS_EC2_METADATA_DISABLED: "true"
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          cache: 'yarn'
      - name: Docusaurus Webpack cache
        uses: actions/cache@v3
        with:
          path: node_modules/.cache
          key: ${{ runner.os }}-webpack-cache
      - name: Install awscli
        uses: unfor19/install-aws-cli-action@v1
      - name: Install jq
        run: sudo apt-get install jq
      - name: Install dependencies
        run: yarn install --frozen-lockfile
      - name: Build the Docusaurus site
        env:
          NODE_OPTIONS: "--max-old-space-size=8192"
        run: yarn build
      - name: Deploy the Docusaurus site
        env:
          S3_BUCKET_NAME: ${{ secrets.S3_BUCKET_NAME }}
          CLOUDFRONT_DISTRIBUTION_ID: ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          aws s3 sync --delete build/ s3://${S3_BUCKET_NAME}${BASE_URL}
          export INVALIDATION_ID=$(
            aws cloudfront create-invalidation \
              --distribution-id $CLOUDFRONT_DISTRIBUTION_ID \
              --paths "${BASE_URL}*" \
            | jq -r .Invalidation.Id
          )
          aws cloudfront wait invalidation-completed \
            --id $INVALIDATION_ID \
            --distribution-id $CLOUDFRONT_DISTRIBUTION_ID
