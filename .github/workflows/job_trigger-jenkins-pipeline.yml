name: Trigger Jenkins pipeline

on:
  workflow_call:
    inputs:
      JENKINS_TRIGGER_SOURCE:
        default: "${{ github.event_name }} on ${{ github.ref_name }} in ${{ github.repository }} at ${{ github.sha }}"
        type: string
    secrets:
      WEBOPS_AWS_REGION:
        required: true
      WEBOPS_AWS_SG_NAME:
        required: true
      WEBOPS_JENKINS_PORT:
        required: true
      WEBOPS_JENKINS_HOST:
        required: true
      WEBOPS_AWS_ACCESS_KEY:
        required: true
      WEBOPS_AWS_SECRET_KEY:
        required: true
      WEBOPS_WEBHOOK_TOKEN:
        required: true

jobs:
  trigger-jenkins-pipeline:
    runs-on: ubuntu-latest
    steps:
      - name: Get runner IP
        if: always()
        id: ip
        uses: haythem/public-ip@v1.3
      - name: Add runner to AWS security group ingress
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.WEBOPS_AWS_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.WEBOPS_AWS_SECRET_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.WEBOPS_AWS_REGION }}
        run: aws ec2 authorize-security-group-ingress --group-name ${{ secrets.WEBOPS_AWS_SG_NAME }} --protocol tcp --port ${{ secrets.WEBOPS_JENKINS_PORT }} --cidr ${{ steps.ip.outputs.ipv4 }}/32
      - name: Trigger Jenkins pipeline
        run: |
          curl -H 'Content-Type: application/json' \
            -d '{ "TRIGGER_SOURCE": "${{ inputs.JENKINS_TRIGGER_SOURCE }}" }' \
            -X POST \
            ${{ secrets.WEBOPS_JENKINS_HOST }}:${{ secrets.WEBOPS_JENKINS_PORT || '80' }}/generic-webhook-trigger/invoke?token=${{ secrets.WEBOPS_WEBHOOK_TOKEN }}
      - name: Remove runner from AWS security group ingress
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.WEBOPS_AWS_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.WEBOPS_AWS_SECRET_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.WEBOPS_AWS_REGION }}
        if: always()
        run: aws ec2 revoke-security-group-ingress --group-name ${{ secrets.WEBOPS_AWS_SG_NAME }} --protocol tcp --port ${{ secrets.WEBOPS_JENKINS_PORT }} --cidr ${{ steps.ip.outputs.ipv4 }}/32
